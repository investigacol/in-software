# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-01 19:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicDiscipline',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Academic Discipline')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.CharField(max_length=500, verbose_name='Report')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=30, verbose_name='Department')),
                ('town', models.CharField(max_length=30, verbose_name='Town')),
                ('max_level', models.CharField(choices=[('ELEMS', 'Elementary School'), ('PRIMS', 'Primary School'), ('SECUS', 'Secondary School')], max_length=20, verbose_name='Max. level')),
                ('director_fullname', models.CharField(max_length=25, verbose_name='Full name School director')),
                ('address', models.CharField(max_length=300, verbose_name='Address')),
                ('telephone', models.CharField(max_length=25, verbose_name='Telephone')),
                ('email', models.EmailField(max_length=254, verbose_name='School email')),
                ('facebook_url', models.CharField(blank=True, max_length=20, verbose_name='Facebook')),
                ('school_website', models.CharField(blank=True, max_length=20, verbose_name='Website')),
                ('has_projector', models.BooleanField(verbose_name='Has projector?')),
                ('has_screen', models.BooleanField(verbose_name='Has screen?')),
                ('has_webcam', models.BooleanField(verbose_name='Has webcam?')),
                ('has_videoconf_room', models.BooleanField(verbose_name='Has videoconf room?')),
                ('has_microphone', models.BooleanField(verbose_name='Has microphone?')),
                ('has_speakers', models.BooleanField(verbose_name='Has speakers?')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=20, verbose_name='Degree')),
                ('subjects', models.CharField(max_length=40, verbose_name='Subjects')),
                ('telephone', models.CharField(max_length=25, verbose_name='Telephone')),
                ('twitter_username', models.CharField(blank=True, max_length=15, verbose_name='Twitter')),
                ('facebook_profile', models.CharField(blank=True, max_length=30, verbose_name='Facebook')),
                ('has_IT_training', models.BooleanField(verbose_name='Has IT training?')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScienceField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('LIFE', 'Life Sciences'), ('APPL', 'Applied Sciences'), ('SOCIAL', 'Social Sciences'), ('PHYS', 'Physical Sciences')], max_length=30, verbose_name='Science Field')),
                ('description', models.CharField(max_length=300, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Scientist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_degree', models.CharField(choices=[('MAG', 'Master'), ('PHD', 'PhD'), ('MD', 'MD')], max_length=10, verbose_name='Academic Degree')),
                ('current_occupation', models.CharField(max_length=40, verbose_name='Occupation')),
                ('working_place', models.CharField(max_length=40, verbose_name='Working Place')),
                ('languages', models.CharField(blank=True, max_length=50, verbose_name='Languages')),
                ('personal_website', models.CharField(blank=True, max_length=30, verbose_name='Website')),
                ('researchgate_profile', models.CharField(blank=True, max_length=30, verbose_name='ResearchGate')),
                ('linkedin_profile', models.CharField(blank=True, max_length=30, verbose_name='LinkedIn')),
                ('twitter_username', models.CharField(blank=True, max_length=15, verbose_name='Twitter')),
                ('facebook_profile', models.CharField(blank=True, max_length=30, verbose_name='Facebook')),
                ('referenced_by', models.CharField(max_length=150, verbose_name='Referenced by')),
                ('is_verified', models.BooleanField(verbose_name='Verified Researcher?')),
                ('academic_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.AcademicDiscipline')),
                ('country_residence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.Country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoconfSession',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('selected_date', models.DateField()),
                ('selected_hour', models.DateTimeField()),
                ('status_school', models.CharField(choices=[('CANCEL', 'Cancelled'), ('VER_REQ', 'To verify requirements'), ('TO_SCH', 'To be scheduled'), ('SCHED', 'Scheduled'), ('IN_PROG', 'In progress'), ('COMPLET', 'Completed')], max_length=7, verbose_name='Status school')),
                ('status_scientist', models.CharField(choices=[('CANCEL', 'Cancelled'), ('READING', 'Preparing reading'), ('TRAIN', 'Training'), ('TO_SCH', 'To be scheduled'), ('SCHED', 'Scheduled'), ('IN_PROG', 'In progress'), ('COMPLET', 'Completed')], max_length=7, verbose_name='Status scientist')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.Moderator')),
                ('school_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.SchoolTeacher')),
                ('scientist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.Scientist')),
            ],
        ),
        migrations.AddField(
            model_name='academicdiscipline',
            name='academic_discipline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='in_videoconfs.ScienceField'),
        ),
    ]
